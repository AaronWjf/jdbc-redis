package br.com.svvs.jdbc.redis;

import static org.junit.Assert.assertEquals;

import java.sql.DatabaseMetaData;

import org.junit.Test;

public class RedisDatabaseMetaDataTest extends BaseTest {

    private DatabaseMetaData metadata = new RedisDatabaseMetaData();

    @Test
    public void driverInformation() throws Exception {
        assertEquals("Redis JDBC Driver", metadata.getDriverName());
        assertEquals(0, metadata.getDriverMajorVersion());
        assertEquals(1, metadata.getDriverMinorVersion());
    }

    @Test
    public void validateUnimplementedMethods() throws Exception {
        DatabaseMetaData metadata = new RedisDatabaseMetaData();

        assertNotSupported(() -> metadata.unwrap(null));
        assertNotSupported(() -> metadata.isWrapperFor(null));
        assertNotSupported(() -> metadata.allProceduresAreCallable());
        assertNotSupported(() -> metadata.allTablesAreSelectable());
        assertNotSupported(() -> metadata.getURL());
        assertNotSupported(() -> metadata.getUserName());
        assertNotSupported(() -> metadata.isReadOnly());
        assertNotSupported(() -> metadata.nullsAreSortedHigh());
        assertNotSupported(() -> metadata.nullsAreSortedLow());
        assertNotSupported(() -> metadata.nullsAreSortedAtStart());
        assertNotSupported(() -> metadata.nullsAreSortedAtEnd());
        assertNotSupported(() -> metadata.getDatabaseProductName());
        assertNotSupported(() -> metadata.getDatabaseProductVersion());
        assertNotSupported(() -> metadata.getDriverVersion());
        assertNotSupported(() -> metadata.usesLocalFiles());
        assertNotSupported(() -> metadata.usesLocalFilePerTable());
        assertNotSupported(() -> metadata.supportsMixedCaseIdentifiers());
        assertNotSupported(() -> metadata.storesUpperCaseIdentifiers());
        assertNotSupported(() -> metadata.storesLowerCaseIdentifiers());
        assertNotSupported(() -> metadata.storesMixedCaseIdentifiers());
        assertNotSupported(() -> metadata.supportsMixedCaseQuotedIdentifiers());
        assertNotSupported(() -> metadata.storesUpperCaseQuotedIdentifiers());
        assertNotSupported(() -> metadata.storesLowerCaseQuotedIdentifiers());
        assertNotSupported(() -> metadata.storesMixedCaseQuotedIdentifiers());
        assertNotSupported(() -> metadata.getIdentifierQuoteString());
        assertNotSupported(() -> metadata.getSQLKeywords());
        assertNotSupported(() -> metadata.getNumericFunctions());
        assertNotSupported(() -> metadata.getStringFunctions());
        assertNotSupported(() -> metadata.getSystemFunctions());
        assertNotSupported(() -> metadata.getTimeDateFunctions());
        assertNotSupported(() -> metadata.getSearchStringEscape());
        assertNotSupported(() -> metadata.getExtraNameCharacters());
        assertNotSupported(() -> metadata.supportsAlterTableWithAddColumn());
        assertNotSupported(() -> metadata.supportsAlterTableWithDropColumn());
        assertNotSupported(() -> metadata.supportsColumnAliasing());
        assertNotSupported(() -> metadata.nullPlusNonNullIsNull());
        assertNotSupported(() -> metadata.supportsConvert());
        assertNotSupported(() -> metadata.supportsConvert(0, 0));
        assertNotSupported(() -> metadata.supportsTableCorrelationNames());
        assertNotSupported(() -> metadata.supportsDifferentTableCorrelationNames());
        assertNotSupported(() -> metadata.supportsExpressionsInOrderBy());
        assertNotSupported(() -> metadata.supportsOrderByUnrelated());
        assertNotSupported(() -> metadata.supportsGroupBy());
        assertNotSupported(() -> metadata.supportsGroupByUnrelated());
        assertNotSupported(() -> metadata.supportsGroupByBeyondSelect());
        assertNotSupported(() -> metadata.supportsLikeEscapeClause());
        assertNotSupported(() -> metadata.supportsMultipleResultSets());
        assertNotSupported(() -> metadata.supportsMultipleTransactions());
        assertNotSupported(() -> metadata.supportsNonNullableColumns());
        assertNotSupported(() -> metadata.supportsMinimumSQLGrammar());
        assertNotSupported(() -> metadata.supportsCoreSQLGrammar());
        assertNotSupported(() -> metadata.supportsExtendedSQLGrammar());
        assertNotSupported(() -> metadata.supportsANSI92EntryLevelSQL());
        assertNotSupported(() -> metadata.supportsANSI92IntermediateSQL());
        assertNotSupported(() -> metadata.supportsANSI92FullSQL());
        assertNotSupported(() -> metadata.supportsIntegrityEnhancementFacility());
        assertNotSupported(() -> metadata.supportsOuterJoins());
        assertNotSupported(() -> metadata.supportsFullOuterJoins());
        assertNotSupported(() -> metadata.supportsLimitedOuterJoins());
        assertNotSupported(() -> metadata.getSchemaTerm());
        assertNotSupported(() -> metadata.getProcedureTerm());
        assertNotSupported(() -> metadata.getCatalogTerm());
        assertNotSupported(() -> metadata.isCatalogAtStart());
        assertNotSupported(() -> metadata.getCatalogSeparator());
        assertNotSupported(() -> metadata.supportsSchemasInDataManipulation());
        assertNotSupported(() -> metadata.supportsSchemasInProcedureCalls());
        assertNotSupported(() -> metadata.supportsSchemasInTableDefinitions());
        assertNotSupported(() -> metadata.supportsSchemasInIndexDefinitions());
        assertNotSupported(() -> metadata.supportsSchemasInPrivilegeDefinitions());
        assertNotSupported(() -> metadata.supportsCatalogsInDataManipulation());
        assertNotSupported(() -> metadata.supportsCatalogsInProcedureCalls());
        assertNotSupported(() -> metadata.supportsCatalogsInTableDefinitions());
        assertNotSupported(() -> metadata.supportsCatalogsInIndexDefinitions());
        assertNotSupported(() -> metadata.supportsCatalogsInPrivilegeDefinitions());
        assertNotSupported(() -> metadata.supportsPositionedDelete());
        assertNotSupported(() -> metadata.supportsPositionedUpdate());
        assertNotSupported(() -> metadata.supportsSelectForUpdate());
        assertNotSupported(() -> metadata.supportsStoredProcedures());
        assertNotSupported(() -> metadata.supportsSubqueriesInComparisons());
        assertNotSupported(() -> metadata.supportsSubqueriesInExists());
        assertNotSupported(() -> metadata.supportsSubqueriesInIns());
        assertNotSupported(() -> metadata.supportsSubqueriesInQuantifieds());
        assertNotSupported(() -> metadata.supportsCorrelatedSubqueries());
        assertNotSupported(() -> metadata.supportsUnion());
        assertNotSupported(() -> metadata.supportsUnionAll());
        assertNotSupported(() -> metadata.supportsOpenCursorsAcrossCommit());
        assertNotSupported(() -> metadata.supportsOpenCursorsAcrossRollback());
        assertNotSupported(() -> metadata.supportsOpenStatementsAcrossCommit());
        assertNotSupported(() -> metadata.supportsOpenStatementsAcrossRollback());
        assertNotSupported(() -> metadata.getMaxBinaryLiteralLength());
        assertNotSupported(() -> metadata.getMaxCharLiteralLength());
        assertNotSupported(() -> metadata.getMaxColumnNameLength());
        assertNotSupported(() -> metadata.getMaxColumnsInGroupBy());
        assertNotSupported(() -> metadata.getMaxColumnsInIndex());
        assertNotSupported(() -> metadata.getMaxColumnsInOrderBy());
        assertNotSupported(() -> metadata.getMaxColumnsInSelect());
        assertNotSupported(() -> metadata.getMaxColumnsInTable());
        assertNotSupported(() -> metadata.getMaxConnections());
        assertNotSupported(() -> metadata.getMaxCursorNameLength());
        assertNotSupported(() -> metadata.getMaxIndexLength());
        assertNotSupported(() -> metadata.getMaxSchemaNameLength());
        assertNotSupported(() -> metadata.getMaxProcedureNameLength());
        assertNotSupported(() -> metadata.getMaxCatalogNameLength());
        assertNotSupported(() -> metadata.getMaxRowSize());
        assertNotSupported(() -> metadata.doesMaxRowSizeIncludeBlobs());
        assertNotSupported(() -> metadata.getMaxStatementLength());
        assertNotSupported(() -> metadata.getMaxStatements());
        assertNotSupported(() -> metadata.getMaxTableNameLength());
        assertNotSupported(() -> metadata.getMaxTablesInSelect());
        assertNotSupported(() -> metadata.getMaxUserNameLength());
        assertNotSupported(() -> metadata.getDefaultTransactionIsolation());
        assertNotSupported(() -> metadata.supportsTransactions());
        assertNotSupported(() -> metadata.supportsTransactionIsolationLevel(0));
        assertNotSupported(() -> metadata.supportsDataDefinitionAndDataManipulationTransactions());
        assertNotSupported(() -> metadata.supportsDataManipulationTransactionsOnly());
        assertNotSupported(() -> metadata.dataDefinitionCausesTransactionCommit());
        assertNotSupported(() -> metadata.dataDefinitionIgnoredInTransactions());
        assertNotSupported(() -> metadata.getProcedures("", "", ""));
        assertNotSupported(() -> metadata.getProcedureColumns("", "", "", ""));
        assertNotSupported(() -> metadata.getTables("", "", "", null));
        assertNotSupported(() -> metadata.getSchemas());
        assertNotSupported(() -> metadata.getCatalogs());
        assertNotSupported(() -> metadata.getTableTypes());
        assertNotSupported(() -> metadata.getColumns("", "", "", ""));
        assertNotSupported(() -> metadata.getColumnPrivileges("", "", "", ""));
        assertNotSupported(() -> metadata.getTablePrivileges("", "", ""));
        assertNotSupported(() -> metadata.getBestRowIdentifier("", "", "", 0, true));
        assertNotSupported(() -> metadata.getVersionColumns("", "", ""));
        assertNotSupported(() -> metadata.getPrimaryKeys("", "", ""));
        assertNotSupported(() -> metadata.getImportedKeys("", "", ""));
        assertNotSupported(() -> metadata.getExportedKeys("", "", ""));
        assertNotSupported(() -> metadata.getCrossReference("", "", "", "", "", ""));
        assertNotSupported(() -> metadata.getTypeInfo());
        assertNotSupported(() -> metadata.getIndexInfo("", "", "", true, true));
        assertNotSupported(() -> metadata.supportsResultSetType(0));
        assertNotSupported(() -> metadata.supportsResultSetConcurrency(0, 0));
        assertNotSupported(() -> metadata.ownUpdatesAreVisible(0));
        assertNotSupported(() -> metadata.ownDeletesAreVisible(0));
        assertNotSupported(() -> metadata.ownInsertsAreVisible(0));
        assertNotSupported(() -> metadata.othersUpdatesAreVisible(0));
        assertNotSupported(() -> metadata.othersDeletesAreVisible(0));
        assertNotSupported(() -> metadata.othersInsertsAreVisible(0));
        assertNotSupported(() -> metadata.updatesAreDetected(0));
        assertNotSupported(() -> metadata.deletesAreDetected(0));
        assertNotSupported(() -> metadata.insertsAreDetected(0));
        assertNotSupported(() -> metadata.supportsBatchUpdates());
        assertNotSupported(() -> metadata.getUDTs("", "", "", null));
        assertNotSupported(() -> metadata.getConnection());
        assertNotSupported(() -> metadata.supportsSavepoints());
        assertNotSupported(() -> metadata.supportsNamedParameters());
        assertNotSupported(() -> metadata.supportsMultipleOpenResults());
        assertNotSupported(() -> metadata.supportsGetGeneratedKeys());
        assertNotSupported(() -> metadata.getSuperTypes("", "", ""));
        assertNotSupported(() -> metadata.getSuperTables("", "", ""));
        assertNotSupported(() -> metadata.getAttributes("", "", "", ""));
        assertNotSupported(() -> metadata.supportsResultSetHoldability(0));
        assertNotSupported(() -> metadata.getResultSetHoldability());
        assertNotSupported(() -> metadata.getDatabaseMajorVersion());
        assertNotSupported(() -> metadata.getDatabaseMinorVersion());
        assertNotSupported(() -> metadata.getJDBCMajorVersion());
        assertNotSupported(() -> metadata.getJDBCMinorVersion());
        assertNotSupported(() -> metadata.getSQLStateType());
        assertNotSupported(() -> metadata.locatorsUpdateCopy());
        assertNotSupported(() -> metadata.supportsStatementPooling());
        assertNotSupported(() -> metadata.getRowIdLifetime());
        assertNotSupported(() -> metadata.getSchemas("", ""));
        assertNotSupported(() -> metadata.supportsStoredFunctionsUsingCallSyntax());
        assertNotSupported(() -> metadata.autoCommitFailureClosesAllResultSets());
        assertNotSupported(() -> metadata.getClientInfoProperties());
        assertNotSupported(() -> metadata.getFunctions("", "", ""));
        assertNotSupported(() -> metadata.getFunctionColumns("", "", "", ""));
        assertNotSupported(() -> metadata.getPseudoColumns("", "", "", ""));
        assertNotSupported(() -> metadata.generatedKeyAlwaysReturned());
    }
}
